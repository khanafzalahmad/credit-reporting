
name: CD â€” K3s Deploy with Terraform

on:
  workflow_dispatch:
  workflow_run:
    workflows: [ "CI docker workflow" ]
    types:
      - completed

permissions:
  contents: read
  packages: read

env:
  IMAGE_REGISTRY: docker.io
  IMAGE_NAME: khanafzalahmad/cpp_proj_images
  IMAGE_TAG: ${{ github.sha }}

jobs:
  deploy:
    runs-on: ubuntu-latest
    timeout-minutes: 40

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Show image ref to deploy
        run: echo "Using image $IMAGE_REGISTRY/$IMAGE_NAME:$IMAGE_TAG"

      - name: Install kubectl
        run: |
          set -eux
          VER=$(curl -L -s https://dl.k8s.io/release/stable.txt)
          curl -L -o /usr/local/bin/kubectl https://dl.k8s.io/release/${VER}/bin/linux/amd64/kubectl
          sudo chmod +x /usr/local/bin/kubectl
          kubectl version --client

      - name: Configure kubeconfig from GitHub Secret
        run: |
          mkdir -p ~/.kube
          echo "${{ secrets.KUBECONFIG }}" > ~/.kube/config
          chmod 600 ~/.kube/config
          echo "KUBECONFIG=$HOME/.kube/config" >> $GITHUB_ENV
          kubectl version

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: 1.7.5

      - name: Terraform Init
        working-directory: k8s-tf
        env:
          TF_PLUGIN_CACHE_DIR: ${{ runner.temp }}/tfcache
        run: |
          mkdir -p "$TF_PLUGIN_CACHE_DIR"
          terraform init -input=false

      - name: Terraform Plan
        working-directory: k8s-tf
        env:
          KUBECONFIG: ~/.kube/config
        run: |
          terraform plan             -var="image=${{ env.IMAGE_REGISTRY }}/${{ env.IMAGE_NAME }}:${{ env.IMAGE_TAG }}"             -var="kubeconfig_path=${HOME}/.kube/config"

      - name: Terraform Apply
        working-directory: k8s-tf
        env:
          KUBECONFIG: ~/.kube/config
        run: |
          terraform apply -auto-approve             -var="image=${{ env.IMAGE_REGISTRY }}/${{ env.IMAGE_NAME }}:${{ env.IMAGE_TAG }}"             -var="kubeconfig_path=$HOME/.kube/config"

      - name: Check pod status
        run: kubectl -n credit-reporting get pods -o wide

      - name: Check pod logs
        run: kubectl -n credit-reporting logs -l app=credit-report-web --tail=100 || true

      - name: Check events
        run: kubectl -n credit-reporting get events --sort-by='.lastTimestamp'

      - name: Wait for rollout
        env:
          KUBECONFIG: ~/.kube/config
        run: |
          kubectl -n credit-reporting rollout status deploy/credit-report-web --timeout=120s
          kubectl -n credit-reporting get pods -o wide
          kubectl -n credit-reporting get svc credit-report-web -o yaml

      - name: Smoke test /healthz
        env:
          KUBECONFIG: ~/.kube/config
        run: |
          set -eux
          kubectl -n credit-reporting port-forward svc/credit-report-web 8080:80 >/tmp/pf.log 2>&1 &
          PF_PID=$!
          for i in $(seq 1 20); do
            sleep 0.5
            curl -fsS http://localhost:8080/healthz && break || true
          done
          curl -fsS http://localhost:8080/healthz
          kill $PF_PID || true

      - name: Collect logs
        if: always()
        env:
          KUBECONFIG: ~/.kube/config
        run: |
          mkdir -p artifacts
          kubectl -n credit-reporting logs -l app=credit-report-web --tail=200 --prefix > artifacts/pods.log || true
          kubectl -n credit-reporting get all -o wide > artifacts/resources.txt || true
          kubectl version > artifacts/cluster-version.txt || true

      - name: Upload artifacts
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: k8s-diagnostics
          path: artifacts

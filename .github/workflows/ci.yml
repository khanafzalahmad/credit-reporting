name: CI docker workflow

on:
    workflow_dispatch: 

env:
    DOCKER_IMAGE: khanafzalahmad/cpp_proj_images
    DOCKER_TAG: latest
    DOCKER_USERNAME: ${{ vars.DOCKER_USERNAME }}
    DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}

jobs:
    code-checkout:
        runs-on: ubuntu-latest
        steps:
            - name: Checkout
              uses: actions/checkout@v5.0.0
    #build:
        #needs: code-checkout
        #runs-on: ubuntu-latest
        #steps:
            
            - name: Install dependencies
              run: |
                  sudo apt-get update
                  sudo apt-get install -y build-essential cmake unzip wget
            
            - name: Install ASIO
              run: sudo apt-get install -y libasio-dev
        
            - name: Install SonarCloud Build Wrapper
              run: |
                  wget https://sonarcloud.io/static/cpp/build-wrapper-linux-x86.zip
                  unzip build-wrapper-linux-x86.zip -d .sonar

        
            - name: Build with Build Wrapper
              run: |
                  .sonar/build-wrapper-linux-x86/build-wrapper-linux-x86-64 --out-dir bw-output make
        
            - name: Run SonarCloud Scan
              uses: SonarSource/sonarqube-scan-action@v5
              env:
                  SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}      
              with:
                args: >
                  --define sonar.projectKey=khanafzalahmad_credit-reporting
                  --define sonar.organization=khanfzalahmad
                  --define sonar.host.url=https://sonarcloud.io
                  --define sonar.sources=src
                  --define sonar.cfamily.build-wrapper-output=bw-output

                
            - name: Docker login
              uses: docker/login-action@v3.5.0
              with:
                username: ${{env.DOCKER_USERNAME}}
                password: ${{env.DOCKER_PASSWORD}}
            
            - name: Build image 
              run: |
                docker build -t $DOCKER_IMAGE:${{github.sha}} .
                docker tag $DOCKER_IMAGE:${{github.sha}} $DOCKER_IMAGE:latest

            - name: push the docker image
              run: |
                   docker push $DOCKER_IMAGE:${{github.sha}}
                   docker push $DOCKER_IMAGE:latest
            - name: container created
              run: |
                   docker run -d $DOCKER_IMAGE:${{github.sha}} -p 8080:8080 $DOCKER_IMAGE:latest

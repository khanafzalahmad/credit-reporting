name: CI docker workflow

on:
    workflow_dispatch: 

env:
    DOCKER_IMAGE: khanafzalahmad/cpp_proj_images
    DOCKER_TAG: latest
    DOCKER_USERNAME: ${{ vars.DOCKER_USERNAME }}
    DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}

jobs:
    code-checkout:
        runs-on: ubuntu-latest
        steps:
            - name: Checkout
              uses: actions/checkout@v5.0.0
    #build:
        #needs: code-checkout
        #runs-on: ubuntu-latest
        #steps:
            
            - name: Install dependencies
              run: |
                  sudo apt-get update
                  sudo apt-get install -y build-essential cmake
            
            - name: SonarCloud Scan for C and C++
              uses: SonarSource/sonarcloud-github-c-cpp@v3.2.0
              with:
                  sonar-token: ${{ secrets.SONAR_TOKEN }}
                  project-key: ${{ secrets.SONAR_PROJECT_KEY }}
                  organization: ${{ secrets.SONAR_ORGANIZATION }}
                  build-command: |
                    mkdir build
                    cd build
                    cmake ..
                    make

            - name: Analyze with SonarCloud
              uses: codebeltnet/sonarcloud-scan@v2.0.0
              with:
                projectkey: khanafzalahmad_credit-reporting
                password: ${{env.DOCKER_PASSWORD}}
                
            - name: Docker login
              uses: docker/login-action@v3.5.0
              with:
                username: ${{env.DOCKER_USERNAME}}
                password: ${{env.DOCKER_PASSWORD}}
            
            - name: Build image 
              run: |
                docker build -t $DOCKER_IMAGE:${{github.sha}} .
                docker tag $DOCKER_IMAGE:${{github.sha}} $DOCKER_IMAGE:latest

            - name: push the docker image
              run: |
                   docker push $DOCKER_IMAGE:${{github.sha}}
                   docker push $DOCKER_IMAGE:latest
            - name: container created
              run: |
                   docker run -d $DOCKER_IMAGE:${{github.sha}} -p 8080:8080 $DOCKER_IMAGE:latest
